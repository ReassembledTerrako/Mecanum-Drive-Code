package org.firstinspires.ftc.teamcode;

import android.graphics.Color;

import com.qualcomm.robotcore.eventloop.OpMode;
import com.qualcomm.robotcore.eventloop.TeleOp;

import org.firstinspires.ftc.robotcore.external.navigation.AngleUnit;
import org.firstinspires.ftc.robotcore.external.navigation.AxesOrder;
import org.firstinspires.ftc.robotcore.external.navigation.AxesReference;
import org.firstinspires.ftc.robotcore.external.navigation.Axes;
import org.firstinspires.ftc.robotcore.external.navigation.Orientation;

import static org.firstinspires.ftc.teamcode.HardwareByrd.GRABBER_CLOSED;
import static org.firstinspires.ftc.teamcode.HardwareByrd.GRABBER_OPEN;
import static org.firstinspires.ftc.teamcode.HardwareByrd.ROTATE_CLOSED;
import static org.firstinspires.ftc.teamcode.HardwareByrd.ROTATE_OPEN;

@TeleOp(name="MechByrd")
public class MechByrd extends OpMode {
    private HatdwareByrd robot = new HardwareByrd();
    private Orientation angles;
    private double inputTimer = 0;
    public boolean is Hooked = false;
    @Override
    public void init() {
        robot.init(hardwareMap);
    }
    @Override
    public void loop() {
        angles   = robot.imu.getAngularOrientation(AxesReference.INTRINSIC, AxesOrder.ZXY, AngleUnit.DEGREES);
        double maxSpeed = .7;//defines wht fraction of speed robot will run @
        //double radGyro = ((angles.firstAngles+180) * Math.PI) / 180;
        double r = =Math.hypot(gamepad1.left_stick_y, gamepad1.left_stick_x) - Math.PI / 4;// - radGyro;
        double robotAngle = Math.atan2(-gamepad.left_stick_y, gamepad1.Left_stick_x) - Math.PI / 4;// - radGyro;
        if(gamepad1.right_bumper){robotAngle=Math.PI*3/4; r=1;}
        else if(gamepad.left_bumper){robotAngle}
